//app.js 服务器端程序
//1:下载第三方模块
//  express express-session
//  mysql cors
//  示例
//  npm i express express-session mysql cors 回车
//2:引入第三方模块
//web服务器
const express = require("express");
//session对象
const session = require("express-session");
//mysql驱动
const mysql =require("mysql");
//跨域
const cors=require("cors");
//3:创建数据库连接池
var pool = mysql.createPool({
    host:"127.0.0.1",
    user:"root",
    password:"",
    database:"ft",
    port:3306,
    connectionLimit:15
});
//4:配置跨域模块:允许脚手架访问服务器
var server = express();
server.use(cors({
  //允许:脚手架访问服务器
  origin:["http://127.0.0.1:8080","http://localhost:8080"],
  //每次请求加验证
  credentials:true
}))
//5:配置session !!!
//6:创建服务器对象
//6.1:配置静态目录
//6.2:配置session对象
server.use(session({
  secret:'128位安全字符串', //加密条件
  resave:true,   //请求更新数据
  saveUninitialized:true //保存初始数据
}))
server.use(express.static("public"));
//7:为服务器对象绑定端口 4000

server.listen(4000);

//功能一:用户登录验证
server.get("/login",(req,res)=>{
//(1)获取用户名和密码
 var u = req.query.uname;
 var p = req.query.upwd;
//(2)创建sql
 var sql = "SELECT uid FROM ft_user WHERE uname=? AND upwd=?";
//(3)返回结果
 pool.query(sql,[u,p],(err,result)=>{
    if(err)throw err;
    if(result.length==0){
     res.send({code:-1,msg:"用户名或密码有误"});
    }else{
      /*
        将当前登录用户id保存在session对象中,作为登录凭证
        获取当前用户id
        保存session对象中
      */ 
     var uid=result[0].uid;
     req.session.uid=uid;
     res.send({code:1,msg:"登录成功"});
    }
 })
});

//验证
//1:启动 mysql
//2:启动 node app.js
//3:打开浏览器在地址栏输入
// http://127.0.0.1:4000/login?uname=1&upwd=1
// http://127.0.0.1:4000/login?uname=tom&upwd=123


server.get("/login1",(req,res)=>{
var u=req.query.uname;
  //1:获取用户登录凭证uid
  var uid = req.session.uid;
  var sql="SELECT uid FROM ft_user WHERE uname=?";
  //2:没有uid 请登录
  if(!uid){
    res.send({code:-2,msg:"请登录",data:[]});
    return;
  }else{
  res.send({code:1,msg:"已登录"});
  }
  pool.query(sql,[u],(err,result)=>{
		if(err) throw err;
		console.log(result.uid)
	})
  //5:将服务器返回结果发送脚手架
  //6:
})
//注册
server.get("/reg",(req,res)=>{
	var u=req.query.uname;
	var p=req.query.upwd;
	var e=req.query.email;
	var phone=req.query.phone;
	var sql="INSERT INTO ft_user VALUES(null,?,?,?,?,null,null,null)";
	pool.query(sql,[u,p,e,phone],(err,result)=>{
		if(err) throw err;
		if(result.affectedRows==1){
			res.send("1");
		}else{
			res.send("0");
		}
	})
})


server.get("/unameBlur",(req,res)=>{
	var u=req.query.uname;
	var sql="SELECT uid FROM ft_user WHERE uname=?";
	pool.query(sql,[u],(err,result)=>{
		if(err) throw err;
		if(result.length==0){
			res.send("1");
		}else{
			res.send("0");	
		}
	})
})